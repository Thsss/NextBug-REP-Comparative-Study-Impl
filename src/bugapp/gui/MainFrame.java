/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on Dec 10, 2012, 3:26:07 PM
 */
package bugapp.gui;

import bugapp.auto.Core;
import bugapp.auto.NextbugFacade;
import bugapp.util.DateUtil;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Henrique
 */
public class MainFrame extends javax.swing.JFrame {

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlProfileBugs = new bugapp.gui.ProfilesBugsPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mniMatrix = new javax.swing.JMenuItem();
        mniWekaArff = new javax.swing.JMenuItem();
        mniBugzillaModFiles = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mniKmedoid = new javax.swing.JMenuItem();
        mniTesteKmedoid = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mniClusterSample = new javax.swing.JMenuItem();
        mniMesCsv = new javax.swing.JMenuItem();
        mniExit = new javax.swing.JMenuItem();
        mnuNextBug = new javax.swing.JMenu();
        mniNextbugMozillaDataset = new javax.swing.JMenuItem();
        mniNextbugMozillaParTest = new javax.swing.JMenuItem();
        mniMozillaDaily = new javax.swing.JMenuItem();
        mniMozillaDisperseChart = new javax.swing.JMenuItem();
        mniMozillaMaxOverlap = new javax.swing.JMenuItem();
        mniMozillaParProduct = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        ckmMylynContextFiles = new javax.swing.JCheckBoxMenuItem();
        mniNextbugMylyn = new javax.swing.JMenuItem();
        mniNextbugMylynParTest = new javax.swing.JMenuItem();
        mniMylynDisperseChart = new javax.swing.JMenuItem();
        mniMylynMaxOverlap = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        mniContextChange = new javax.swing.JMenuItem();
        mnuBaseline = new javax.swing.JMenu();
        mniMozillaBaseline = new javax.swing.JMenuItem();
        mniMylynContextBaseline = new javax.swing.JMenuItem();
        mniMylynCommitBaseline = new javax.swing.JMenuItem();
        mniCheckSameComponent = new javax.swing.JCheckBoxMenuItem();
        mnuRep = new javax.swing.JMenu();
        mniRepMozilla = new javax.swing.JMenuItem();
        chkTrainRep = new javax.swing.JCheckBoxMenuItem();
        mnuSurvey = new javax.swing.JMenu();
        mniCvsFileToSurveyDB = new javax.swing.JMenuItem();
        mniSurveyDialog = new javax.swing.JMenuItem();
        mnuPasm = new javax.swing.JMenu();
        mniPasm = new javax.swing.JMenuItem();
        mniPasmParTest = new javax.swing.JMenuItem();
        mnuCommits = new javax.swing.JMenu();
        mniSvnXmlToScriptSql = new javax.swing.JMenuItem();
        mniCommitsBugsToScriptSql = new javax.swing.JMenuItem();
        mniNewCommitsBugsToScriptSQL = new javax.swing.JMenuItem();
        mnuOld = new javax.swing.JMenu();
        mniFind = new javax.swing.JMenuItem();
        mniSimpleFind = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mniSimilarBugs = new javax.swing.JMenuItem();
        mniKmeans = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().add(pnlProfileBugs, java.awt.BorderLayout.CENTER);

        mnuFile.setText("File");

        mniMatrix.setText("Matrix");
        mniMatrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMatrixActionPerformed(evt);
            }
        });
        mnuFile.add(mniMatrix);

        mniWekaArff.setText("Weka Arff");
        mniWekaArff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniWekaArffActionPerformed(evt);
            }
        });
        mnuFile.add(mniWekaArff);

        mniBugzillaModFiles.setText("Bugzilla Mod Files");
        mniBugzillaModFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniBugzillaModFilesActionPerformed(evt);
            }
        });
        mnuFile.add(mniBugzillaModFiles);
        mnuFile.add(jSeparator2);

        mniKmedoid.setText("K-medoid");
        mniKmedoid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniKmedoidActionPerformed(evt);
            }
        });
        mnuFile.add(mniKmedoid);

        mniTesteKmedoid.setText("Teste K-medoid");
        mniTesteKmedoid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniTesteKmedoidActionPerformed(evt);
            }
        });
        mnuFile.add(mniTesteKmedoid);
        mnuFile.add(jSeparator3);

        mniClusterSample.setText("Cluster Sample");
        mniClusterSample.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniClusterSampleActionPerformed(evt);
            }
        });
        mnuFile.add(mniClusterSample);

        mniMesCsv.setText("MES Csv");
        mniMesCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMesCsvActionPerformed(evt);
            }
        });
        mnuFile.add(mniMesCsv);

        mniExit.setText("Exit");
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        mnuFile.add(mniExit);

        jMenuBar1.add(mnuFile);

        mnuNextBug.setText("NextBug");

        mniNextbugMozillaDataset.setText("Mozilla Dataset");
        mniNextbugMozillaDataset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNextbugMozillaDatasetActionPerformed(evt);
            }
        });
        mnuNextBug.add(mniNextbugMozillaDataset);

        mniNextbugMozillaParTest.setText("Mozilla Parameter Test");
        mniNextbugMozillaParTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNextbugMozillaParTestActionPerformed(evt);
            }
        });
        mnuNextBug.add(mniNextbugMozillaParTest);

        mniMozillaDaily.setText("Mozilla Daily");
        mniMozillaDaily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMozillaDailyActionPerformed(evt);
            }
        });
        mnuNextBug.add(mniMozillaDaily);

        mniMozillaDisperseChart.setText("Mozilla Disperse Chart");
        mniMozillaDisperseChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMozillaDisperseChartActionPerformed(evt);
            }
        });
        mnuNextBug.add(mniMozillaDisperseChart);

        mniMozillaMaxOverlap.setText("Mozilla MaxOverlap");
        mniMozillaMaxOverlap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMozillaMaxOverlapActionPerformed(evt);
            }
        });
        mnuNextBug.add(mniMozillaMaxOverlap);

        mniMozillaParProduct.setText("Mozilla per Product ");
        mniMozillaParProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMozillaParProductActionPerformed(evt);
            }
        });
        mnuNextBug.add(mniMozillaParProduct);
        mnuNextBug.add(jSeparator4);

        ckmMylynContextFiles.setSelected(true);
        ckmMylynContextFiles.setText("Context Files");
        mnuNextBug.add(ckmMylynContextFiles);

        mniNextbugMylyn.setText("Mylyn Dataset");
        mniNextbugMylyn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNextbugMylynActionPerformed(evt);
            }
        });
        mnuNextBug.add(mniNextbugMylyn);

        mniNextbugMylynParTest.setText("Mylyn Parameter Test");
        mniNextbugMylynParTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNextbugMylynParTestActionPerformed(evt);
            }
        });
        mnuNextBug.add(mniNextbugMylynParTest);

        mniMylynDisperseChart.setText("Mylyn Disperse Chart");
        mniMylynDisperseChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMylynDisperseChartActionPerformed(evt);
            }
        });
        mnuNextBug.add(mniMylynDisperseChart);

        mniMylynMaxOverlap.setText("Mylyn MaxOverlap");
        mniMylynMaxOverlap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMylynMaxOverlapActionPerformed(evt);
            }
        });
        mnuNextBug.add(mniMylynMaxOverlap);
        mnuNextBug.add(jSeparator5);

        mniContextChange.setText("Context Change");
        mniContextChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniContextChangeActionPerformed(evt);
            }
        });
        mnuNextBug.add(mniContextChange);

        jMenuBar1.add(mnuNextBug);

        mnuBaseline.setText("Baseline");

        mniMozillaBaseline.setText("Mozilla Baseline");
        mniMozillaBaseline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMozillaBaselineActionPerformed(evt);
            }
        });
        mnuBaseline.add(mniMozillaBaseline);

        mniMylynContextBaseline.setText("Mylyn Context");
        mniMylynContextBaseline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMylynContextBaselineActionPerformed(evt);
            }
        });
        mnuBaseline.add(mniMylynContextBaseline);

        mniMylynCommitBaseline.setText("Mylyn Commit");
        mniMylynCommitBaseline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniMylynCommitBaselineActionPerformed(evt);
            }
        });
        mnuBaseline.add(mniMylynCommitBaseline);

        mniCheckSameComponent.setSelected(true);
        mniCheckSameComponent.setText("Same Component");
        mnuBaseline.add(mniCheckSameComponent);

        jMenuBar1.add(mnuBaseline);

        mnuRep.setText("REP");

        mniRepMozilla.setText("Mozilla REP");
        mniRepMozilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniRepMozillaActionPerformed(evt);
            }
        });
        mnuRep.add(mniRepMozilla);

        chkTrainRep.setSelected(true);
        chkTrainRep.setText("Train REP?");
        mnuRep.add(chkTrainRep);

        jMenuBar1.add(mnuRep);

        mnuSurvey.setText("Survey");

        mniCvsFileToSurveyDB.setText("Cvs File to Survey DB");
        mniCvsFileToSurveyDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniCvsFileToSurveyDBActionPerformed(evt);
            }
        });
        mnuSurvey.add(mniCvsFileToSurveyDB);

        mniSurveyDialog.setText("Survey Dialog");
        mniSurveyDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSurveyDialogActionPerformed(evt);
            }
        });
        mnuSurvey.add(mniSurveyDialog);

        jMenuBar1.add(mnuSurvey);

        mnuPasm.setText("PASM");

        mniPasm.setText("PASM");
        mniPasm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPasmActionPerformed(evt);
            }
        });
        mnuPasm.add(mniPasm);

        mniPasmParTest.setText("Parameters Test");
        mniPasmParTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPasmParTestActionPerformed(evt);
            }
        });
        mnuPasm.add(mniPasmParTest);

        jMenuBar1.add(mnuPasm);

        mnuCommits.setText("Commits");

        mniSvnXmlToScriptSql.setText("SVN XML to Script SQL");
        mniSvnXmlToScriptSql.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSvnXmlToScriptSqlActionPerformed(evt);
            }
        });
        mnuCommits.add(mniSvnXmlToScriptSql);

        mniCommitsBugsToScriptSql.setText("Commits-Bugs to ScriptSQL");
        mniCommitsBugsToScriptSql.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniCommitsBugsToScriptSqlActionPerformed(evt);
            }
        });
        mnuCommits.add(mniCommitsBugsToScriptSql);

        mniNewCommitsBugsToScriptSQL.setText("New Map Commits-Bugs SQL");
        mniNewCommitsBugsToScriptSQL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNewCommitsBugsToScriptSQLActionPerformed(evt);
            }
        });
        mnuCommits.add(mniNewCommitsBugsToScriptSQL);

        jMenuBar1.add(mnuCommits);

        mnuOld.setText("Old");

        mniFind.setText("Find Context Change");
        mniFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniFindActionPerformed(evt);
            }
        });
        mnuOld.add(mniFind);

        mniSimpleFind.setText("Find Simple Context");
        mniSimpleFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSimpleFindActionPerformed(evt);
            }
        });
        mnuOld.add(mniSimpleFind);
        mnuOld.add(jSeparator1);

        mniSimilarBugs.setText("Similarity Bugs");
        mniSimilarBugs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSimilarBugsActionPerformed(evt);
            }
        });
        mnuOld.add(mniSimilarBugs);

        mniKmeans.setText("K-Means");
        mniKmeans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniKmeansActionPerformed(evt);
            }
        });
        mnuOld.add(mniKmeans);

        jMenuBar1.add(mnuOld);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mniExitActionPerformed

    private void mniFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniFindActionPerformed
        try {
            DateFormat F = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date DtBegin = F.parse(pnlProfileBugs.getBeginDate());
            java.util.Date DtEnd = F.parse(pnlProfileBugs.getEndDate());
            
            System.out.println("Begin");
            Core.findContextChange(DtBegin, DtEnd);
            System.out.println("End");
        } catch (ParseException e) {
            System.out.println(e);
        }
        
    }//GEN-LAST:event_mniFindActionPerformed

    private void mniSimpleFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSimpleFindActionPerformed
        try {
            DateFormat F = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date DtBegin = F.parse(pnlProfileBugs.getBeginDate());
            java.util.Date DtEnd = F.parse(pnlProfileBugs.getEndDate());
            
            System.out.println("Begin");
            Core.findSimpleContextChange(DtBegin, DtEnd);
            System.out.println("End");
        } catch (ParseException e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_mniSimpleFindActionPerformed

    private void mniSimilarBugsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSimilarBugsActionPerformed
        /*
select bug_id, short_desc, creation_ts, cf_last_resolved, resolution
from bugs
where bug_id = ?	
or bug_id = ?
         */
        try{
            DateFormat F = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date DtBegin = F.parse(pnlProfileBugs.getBeginDate());
            java.util.Date DtEnd = F.parse(pnlProfileBugs.getEndDate());
            
            System.out.println("Begin");
            Core.findSimilarBugs(DtBegin, DtEnd);
            System.out.println("End");
            
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_mniSimilarBugsActionPerformed

    private void mniKmeansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniKmeansActionPerformed
        try{
            DateFormat F = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date DtBegin = F.parse(pnlProfileBugs.getBeginDate());
            java.util.Date DtEnd = F.parse(pnlProfileBugs.getEndDate());
            
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.kmeans(DtBegin, DtEnd);
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
            
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_mniKmeansActionPerformed

    private void mniMatrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMatrixActionPerformed
        try{
            DateFormat F = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date DtBegin = F.parse(pnlProfileBugs.getBeginDate());
            java.util.Date DtEnd = F.parse(pnlProfileBugs.getEndDate());
            
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.matrixDocTerm(DtBegin, DtEnd);
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
            System.gc();
            
        }catch(Exception e){
            System.out.println(e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_mniMatrixActionPerformed

    private void mniWekaArffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniWekaArffActionPerformed
        try{
            DateFormat F = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date DtBegin = F.parse(pnlProfileBugs.getBeginDate());
            java.util.Date DtEnd = F.parse(pnlProfileBugs.getEndDate());
            
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.toWekaArff(DtBegin, DtEnd);
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
            System.gc();
            
        }catch(Exception e){
            System.out.println(e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_mniWekaArffActionPerformed

    private void mniKmedoidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniKmedoidActionPerformed
        try{
            DateFormat F = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date DtBegin = F.parse(pnlProfileBugs.getBeginDate());
            java.util.Date DtEnd = F.parse(pnlProfileBugs.getEndDate());
            
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.kmedoids(DtBegin, DtEnd);
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
            System.gc();
            
        }catch(Exception e){
            System.out.println(e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_mniKmedoidActionPerformed

    private void mniTesteKmedoidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniTesteKmedoidActionPerformed
        try{
            DateFormat F = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date DtBegin = F.parse(pnlProfileBugs.getBeginDate());
            java.util.Date DtEnd = F.parse(pnlProfileBugs.getEndDate());
            
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.testsKmedoids(DtBegin, DtEnd,3,203);
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
            System.gc();
            
        }catch(Exception e){
            System.out.println(e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_mniTesteKmedoidActionPerformed

    private void mniClusterSampleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniClusterSampleActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.asergCluster();
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
            System.gc();
            
        }catch(Exception e){
            System.out.println(e);
            e.printStackTrace();
        }

    }//GEN-LAST:event_mniClusterSampleActionPerformed

    private void mniSvnXmlToScriptSqlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSvnXmlToScriptSqlActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.xmlCommitsToSQL();
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
        
    }//GEN-LAST:event_mniSvnXmlToScriptSqlActionPerformed

    private void mniCommitsBugsToScriptSqlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniCommitsBugsToScriptSqlActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.mapCommitsBugIdToScriptSQL();
            //Core.mapGeneralBugsToCommits();
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
        
    }//GEN-LAST:event_mniCommitsBugsToScriptSqlActionPerformed

    private void mniPasmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPasmActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.pasm();
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
        
    }//GEN-LAST:event_mniPasmActionPerformed

    private void mniBugzillaModFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniBugzillaModFilesActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.mapBugsAttachsToFiles();
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }

    }//GEN-LAST:event_mniBugzillaModFilesActionPerformed

    private void mniPasmParTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPasmParTestActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.pasmParametersTest();
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_mniPasmParTestActionPerformed

    private void mniNextbugMozillaDatasetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNextbugMozillaDatasetActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.adhocPasmIssues();
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_mniNextbugMozillaDatasetActionPerformed

    private void mniNextbugMozillaParTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNextbugMozillaParTestActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.adhocIssuesParameterTest();
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_mniNextbugMozillaParTestActionPerformed

    private void mniNextbugMylynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNextbugMylynActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            NextbugFacade.nextbugMylyn( ckmMylynContextFiles.isSelected() );
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_mniNextbugMylynActionPerformed

    private void mniNextbugMylynParTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNextbugMylynParTestActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            NextbugFacade.nextbugMylynPararameterTest( ckmMylynContextFiles.isSelected() );
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_mniNextbugMylynParTestActionPerformed

    private void mniMozillaDailyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMozillaDailyActionPerformed
        try{
            String strDate = DateUtil.getDateAsString( DateUtil.yesterday(), "yyyy-MM-dd" );
            
            strDate = JOptionPane.showInputDialog(this, "Select date for the experiment (format yyyy-mm-dd): ", strDate);

            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            NextbugFacade.nextbugMozillaDailyExperiment(strDate);
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_mniMozillaDailyActionPerformed

    private void mniContextChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniContextChangeActionPerformed
        
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            NextbugFacade.nextbugContextChange( NextbugFacade.MYLYN_PROCESS );
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
        
        
    }//GEN-LAST:event_mniContextChangeActionPerformed

    private void mniMozillaDisperseChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMozillaDisperseChartActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            NextbugFacade.nextbugMozillaDisperseChart();
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_mniMozillaDisperseChartActionPerformed

    private void mniMylynDisperseChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMylynDisperseChartActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            NextbugFacade.nextbugMylynDisperseChart( ckmMylynContextFiles.isSelected() );
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
        
    }//GEN-LAST:event_mniMylynDisperseChartActionPerformed

    private void mniMylynMaxOverlapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMylynMaxOverlapActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            NextbugFacade.nextbugMylynMaxOverlapOpenBugs(ckmMylynContextFiles.isSelected() );
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
        
    }//GEN-LAST:event_mniMylynMaxOverlapActionPerformed

    private void mniMozillaMaxOverlapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMozillaMaxOverlapActionPerformed

        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            NextbugFacade.nextbugMozillaMaxOverlapOpenBugs();
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
        
    }//GEN-LAST:event_mniMozillaMaxOverlapActionPerformed

    private void mniMozillaParProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMozillaParProductActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
//            Core.adhocIssuesParameterProduct(1,21,10,30,46,74,23,43,47,25);
            Core.adhocIssuesParameterProduct(19,50,55,31,64,63,17,8,2,16);
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
        
    }//GEN-LAST:event_mniMozillaParProductActionPerformed

    private void mniMesCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMesCsvActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            Core.generateCSVforMEScourse();
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_mniMesCsvActionPerformed

    private void mniNewCommitsBugsToScriptSQLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNewCommitsBugsToScriptSQLActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            //Core.newMapCommitsBugIdToScriptSQL();
            Core.testMapCommitsBugIdToScriptSQL("2011");
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_mniNewCommitsBugsToScriptSQLActionPerformed

    private void mniMozillaBaselineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMozillaBaselineActionPerformed
        baselineMethod(NextbugFacade.MOZILLA_PROCESS, false);
    }//GEN-LAST:event_mniMozillaBaselineActionPerformed

    private void mniMylynContextBaselineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMylynContextBaselineActionPerformed
        baselineMethod(NextbugFacade.MYLYN_PROCESS, true);
    }//GEN-LAST:event_mniMylynContextBaselineActionPerformed

    private void mniMylynCommitBaselineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniMylynCommitBaselineActionPerformed
        baselineMethod(NextbugFacade.MYLYN_PROCESS, false);
    }//GEN-LAST:event_mniMylynCommitBaselineActionPerformed

    private void mniCvsFileToSurveyDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniCvsFileToSurveyDBActionPerformed

        try{
            JFileChooser fch = new JFileChooser("./mozilla_survey");
            fch.addChoosableFileFilter(new FileNameExtensionFilter("Mozilla CSV", "csv"));
            int Option = fch.showOpenDialog(this);
            if (Option == JFileChooser.APPROVE_OPTION) {
            //String strDate = DateUtil.getDateAsString( DateUtil.yesterday(), "yyyy-MM-dd" );
            //strDate = JOptionPane.showInputDialog(this, "Select date for the experiment (format yyyy-mm-dd): ", strDate);
                java.io.File FixedBugsFile = fch.getSelectedFile();
                long Milis = System.currentTimeMillis();
                System.out.println("Begin");
                NextbugFacade.nextbugCvsFileToMozillaSurveyDB(FixedBugsFile);
                long End = System.currentTimeMillis();
                System.out.printf("End %d%n", (End - Milis) / 1000);
            }
        }catch(Exception e){
            System.out.println(e);
        }
        
        
    }//GEN-LAST:event_mniCvsFileToSurveyDBActionPerformed

    private void mniSurveyDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSurveyDialogActionPerformed
        SurveyDialog dlg = new SurveyDialog(this, true);
        dlg.setVisible(true);
    }//GEN-LAST:event_mniSurveyDialogActionPerformed

    private void mniRepMozillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniRepMozillaActionPerformed
        try{
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            //Core.newMapCommitsBugIdToScriptSQL();
            if(chkTrainRep.isSelected()){
                NextbugFacade.repTrainPasm(NextbugFacade.MOZILLA_PROCESS, false);
            }else{
                NextbugFacade.repPasm(NextbugFacade.MOZILLA_PROCESS, false);
            }
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
        
    }//GEN-LAST:event_mniRepMozillaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem chkTrainRep;
    private javax.swing.JCheckBoxMenuItem ckmMylynContextFiles;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JMenuItem mniBugzillaModFiles;
    private javax.swing.JCheckBoxMenuItem mniCheckSameComponent;
    private javax.swing.JMenuItem mniClusterSample;
    private javax.swing.JMenuItem mniCommitsBugsToScriptSql;
    private javax.swing.JMenuItem mniContextChange;
    private javax.swing.JMenuItem mniCvsFileToSurveyDB;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniFind;
    private javax.swing.JMenuItem mniKmeans;
    private javax.swing.JMenuItem mniKmedoid;
    private javax.swing.JMenuItem mniMatrix;
    private javax.swing.JMenuItem mniMesCsv;
    private javax.swing.JMenuItem mniMozillaBaseline;
    private javax.swing.JMenuItem mniMozillaDaily;
    private javax.swing.JMenuItem mniMozillaDisperseChart;
    private javax.swing.JMenuItem mniMozillaMaxOverlap;
    private javax.swing.JMenuItem mniMozillaParProduct;
    private javax.swing.JMenuItem mniMylynCommitBaseline;
    private javax.swing.JMenuItem mniMylynContextBaseline;
    private javax.swing.JMenuItem mniMylynDisperseChart;
    private javax.swing.JMenuItem mniMylynMaxOverlap;
    private javax.swing.JMenuItem mniNewCommitsBugsToScriptSQL;
    private javax.swing.JMenuItem mniNextbugMozillaDataset;
    private javax.swing.JMenuItem mniNextbugMozillaParTest;
    private javax.swing.JMenuItem mniNextbugMylyn;
    private javax.swing.JMenuItem mniNextbugMylynParTest;
    private javax.swing.JMenuItem mniPasm;
    private javax.swing.JMenuItem mniPasmParTest;
    private javax.swing.JMenuItem mniRepMozilla;
    private javax.swing.JMenuItem mniSimilarBugs;
    private javax.swing.JMenuItem mniSimpleFind;
    private javax.swing.JMenuItem mniSurveyDialog;
    private javax.swing.JMenuItem mniSvnXmlToScriptSql;
    private javax.swing.JMenuItem mniTesteKmedoid;
    private javax.swing.JMenuItem mniWekaArff;
    private javax.swing.JMenu mnuBaseline;
    private javax.swing.JMenu mnuCommits;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuNextBug;
    private javax.swing.JMenu mnuOld;
    private javax.swing.JMenu mnuPasm;
    private javax.swing.JMenu mnuRep;
    private javax.swing.JMenu mnuSurvey;
    private bugapp.gui.ProfilesBugsPanel pnlProfileBugs;
    // End of variables declaration//GEN-END:variables

    public void baselineMethod(int Process, boolean Context){
        try{
            boolean Component = mniCheckSameComponent.isSelected();
            
            long Milis=System.currentTimeMillis();
            System.out.println("Begin");
            NextbugFacade.baselinePasm(Process,Component,Context);
            long End=System.currentTimeMillis();
            System.out.printf("End %d%n",(End-Milis)/1000);
        }catch(Exception e){
            System.out.println(e);
        }
    }

}
